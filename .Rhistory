mutate(Method = replace(Method, Method == "Hoang_HER2_06True", "byHER2time"))%>%
mutate(Method = replace(Method, Method == "Hoang_VIM_06True", "byVIMtime"))
#cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73"
#               , "#F0E442", "#0072B2", "#D55E00", "#CC79A7"
#              , "#D1D0DE", "#636D97")
#colorblind friendly pallete
cbPalette <- c("#004949","#009292","#ff6db6","#ffb6db",
"#490092","#006ddb","#b66dff","#6db6ff","#b6dbff",
"#920000","#924900","#db6d00","#24ff24","#ffff6d")
p <- data %>% group_by(top)%>%
ggplot(aes(x=top, y=n_confirmed, fill=Method)) +
geom_bar(stat="identity", position=position_dodge())+
geom_text(aes(label=n_confirmed)
, vjust=0.0, color="black"
, position = position_dodge(45), size = 4)+
scale_fill_manual(values=cbPalette)+
#  scale_fill_brewer(palette="Paired")+
theme_minimal() +
theme(axis.title.x = element_text(size = 15)
,axis.title.y = element_text(size = 15)
,axis.text.x = element_text(size = 15)
,axis.text.y = element_text(size = 15)
,legend.title = element_blank()
,legend.position = c(0.43, 0.97)
,legend.direction = "horizontal"
,legend.text = element_text(size = 12))
p +
labs(x="Top N genes", y = "Experimentally confirmed drivers")
#note: export in 850 x 400 resolution
View(Hoang_HER2_06True)
Hoang_HER2_06True[["res"]][["summary"]]
View(SC_HER2_06True)
SC_HER2_06True[["res"]][["summary"]]
View(SC_HER2_07True)
SC_HER2_07True[["res"]][["summary"]]
View(SC_VIM_06True)
SC_VIM_06True[["res"]][["summary"]]
#rm(list = ls())
library(R.utils)
library(CausalImpact)
library(phenopath)
library(parallel)
library(AMCBGeneUtils)
library(tidyverse)
library(readr)
#*************************************************************************
#*            Load Bulk Data
defaultDir <- getwd()
dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(dir)
sourceDirectory("./functions", modifiedOnly = F)
loadData()
setwd(defaultDir)
primaryTumor <- data.matrix(BRCA.TP.tibble[,5:ncol(BRCA.TP.tibble)])
row.names(primaryTumor) <-BRCA.TP.tibble$barcode
genes <- changeGeneId(colnames(primaryTumor), from = "Ensembl.ID")
# remove genes with no Hugo Symbol
primaryTumor <- primaryTumor[,!is.na(genes$HGNC.symbol),drop=F]
# remove genes not expressed in at least 20% of the samples
primaryTumor <-
primaryTumor[,colSums(primaryTumor>0)>(0.2*nrow(primaryTumor))
, drop=F]
primaryTumor <- cbind(BRCA.TP.tibble[,1:4],primaryTumor)
TP_patients <- primaryTumor$patient
All <- data.matrix(BRCA.tibble[,5:ncol(BRCA.tibble)])
row.names(All) <-BRCA.tibble$barcode
genes <- changeGeneId(colnames(All))
# remove genes with no Hugo Symbol
All <- All[,!is.na(genes$HGNC.symbol),drop=F]
# remove genes not expressed in at least 20% of the samplesi 30 hyundai automatic
All <-
All[,colSums(All>0)>(0.2*nrow(All))
, drop=F]
All <- cbind(BRCA.tibble[,1:4],All)
rm(BRCA.TP.tibble,BRCA.tibble, genes)
gc()
load("C:/Users/cifam001/OneDrive - University of South Australia/PhD UNISA/DATA/Hoang's dataset/BRCA_matchedData_full.RData")
HoangPatients <- rownames(BRCA_matchedData$mRNAs)
PseudoHoangData <- primaryTumor%>%
filter(patient%in%HoangPatients)
#*************************************************************************
#*            Load Single Cell Data
GSE75688_GEO_processed_Breast_Cancer_raw_TPM_matrix <- read_delim("C:/Users/cifam001/OneDrive - University of South Australia/PhD UNISA/DATA/2017 - GSE75688 - Breast Cancer SC/GSE75688_GEO_processed_Breast_Cancer_raw_TPM_matrix.txt",
"\t", escape_double = FALSE, trim_ws = TRUE)
SingleCell <- GSE75688_GEO_processed_Breast_Cancer_raw_TPM_matrix[,-c(1:3)]
GSE75688_final_sample_information <- read_delim("C:/Users/cifam001/OneDrive - University of South Australia/PhD UNISA/DATA/2017 - GSE75688 - Breast Cancer SC/GSE75688_final_sample_information.txt",
"\t", escape_double = FALSE, trim_ws = TRUE)
TumorSamples <- GSE75688_final_sample_information%>%
#  filter(type =="SC")
filter(type =="SC",index=="Tumor")
GSE75688_series_matrix <- read_delim("C:/Users/cifam001/OneDrive - University of South Australia/PhD UNISA/DATA/2017 - GSE75688 - Breast Cancer SC/GSE75688_series_matrix.txt",
"\t", escape_double = FALSE, trim_ws = TRUE,
skip = 30)
row.names(SingleCell) <- GSE75688_GEO_processed_Breast_Cancer_raw_TPM_matrix$gene_id
SingleCell <-t(SingleCell[,,drop=F])
# remove genes not expressed in at least 30% of the samples
SingleCell <-
SingleCell[,colSums(SingleCell>0)>(0.2*nrow(SingleCell))
, drop=F]
temp <- colnames(SingleCell)
temp <-  gsub("\\..*","",temp)
colnames(SingleCell)<- temp
SingleCell <- SingleCell[TumorSamples$sample,,drop=F]
genes <- changeGeneId(colnames(SingleCell),from = "Ensembl.ID")
# remove genes with no Hugo Symbol
SingleCell <- SingleCell[,!is.na(genes$HGNC.symbol),drop=F]
19355-4
View(PPI)
a <- union(PPI$`Input-node GeneID`,PPI$`Output-node GeneID`)
lenght(unique(a))
length(unique(a))
#############--------  MAIN FUNCTION CODE  --------#############
use_r("findDCD")
library(pcalg)
####------I. Generate and draw random DAG with 10 nodes---------####
p <- 10
set.seed(10)
myDAG <- randomDAG(p, prob = 0.25)
if (require(Rgraphviz))
{ plot(myDAG, main = "randomDAG(10, prob = 0.25)") }
n <- 10000
d.mat <- rmvDAG(n, myDAG, errDist = "normal")
View(d.mat)
devtools::install_github(repo = "AndresMCB/DynamicCancerDriver")
rm(list = ls())
if (!requireNamespace("devtools", quietly = TRUE))
install.packages("devtools")
if (!requireNamespace("tidyverse", quietly = TRUE))
install.packages("tidyverse")
if (!requireNamespace("AMCBGeneUtils", quietly = TRUE))
devtools::install_github(repo = "AndresMCB/AMCBGeneUtils")
if (!requireNamespace("DynamicCancerDriver", quietly = TRUE))
devtools::install_github(repo = "AndresMCB/DynamicCancerDriver")
library(DynamicCancerDriver)
library(AMCBGeneUtils)
library(tidyverse)
data("GSE75688_TPM_tumor")
#----- Find Dynamic Cancer Drivers, PPI top 40% -----
DCD.HER2time_SC <- findDCD(GeneExpression = GSE75688_TPM_tumor
, pathCovariate = "HER2"
, PPItop = 0.4
, findEvent = TRUE)
data("TCGA_BRCA_TP_NormCounts")
View(DCD.HER2time_SC)
View(DCD.HER2time_SC[["res"]][["CDinfer"]])
View(DCD.HER2time_SC[["res"]][["CDinfer"]])
source('C:/Users/cifam001/OneDrive - University of South Australia/AMCB R packages/DynamicCancerDriver/R/findDCD.r', echo=TRUE)
devtools::install_github(repo = "AndresMCB/DynamicCancerDriver")
devtools::install_github(repo = "AndresMCB/DynamicCancerDriver")
library(glue)
detach("package:glue", unload = TRUE)
library(glue)
install.packages(c("cli", "clue", "crosstalk", "fastICA", "future", "gert", "glue", "igraph", "labelled", "lmtest", "mclust", "RcppArmadillo", "robustbase", "sessioninfo", "snow", "stopwords", "tibble", "usethis"))
install.packages(c("cli", "clue", "crosstalk", "fastICA", "future", "gert", "glue", "igraph", "labelled", "lmtest", "mclust", "RcppArmadillo", "robustbase", "sessioninfo", "snow", "stopwords", "tibble", "usethis"))
install.packages(c("cli", "clue", "crosstalk", "fastICA", "future", "gert", "glue", "igraph", "labelled", "lmtest", "mclust", "RcppArmadillo", "robustbase", "sessioninfo", "snow", "stopwords", "tibble", "usethis"))
devtools::install_github(repo = "AndresMCB/DynamicCancerDriver")
library(DynamicCancerDriver)
library(tidyverse)
data("GSE75688_TPM_tumor")
#----- Find Dynamic Cancer Drivers, PPI top 40% -----
DCD.HER2time_SC <- findDCD(GeneExpression = GSE75688_TPM_tumor
, pathCovariate = "HER2"
, PPItop = 0.4
, findEvent = TRUE)
View(DCD.HER2time_SC)
View(DCD.HER2time_SC[["res"]][["CDinfer"]])
source('C:/Users/cifam001/OneDrive - University of South Australia/AMCB R packages/DynamicCancerDriver/R/findDCD.r', echo=TRUE)
#----- Find Dynamic Cancer Drivers, PPI top 40% -----
DCD.HER2time_SC <- findDCD(GeneExpression = GSE75688_TPM_tumor
, pathCovariate = "HER2"
, PPItop = 0.4
, findEvent = TRUE)
View(DCD.HER2time_SC)
View(DCD.HER2time_SC[["res"]][["CDinfer"]])
source('C:/Users/cifam001/OneDrive - University of South Australia/AMCB R packages/DynamicCancerDriver/R/findDCD.r', echo=TRUE)
#----- Find Dynamic Cancer Drivers, PPI top 40% -----
DCD.HER2time_SC <- findDCD(GeneExpression = GSE75688_TPM_tumor
, pathCovariate = "HER2"
, PPItop = 0.4
, findEvent = TRUE)
View(DCD.HER2time_SC)
View(DCD.HER2time_SC[["res"]][["CDinfer"]])
debugSource('C:/Users/cifam001/OneDrive - University of South Australia/AMCB R packages/DynamicCancerDriver/R/findDCD.r', echo=TRUE)
source('C:/Users/cifam001/OneDrive - University of South Australia/AMCB R packages/DynamicCancerDriver/R/findDCD.r', echo=TRUE)
source('C:/Users/cifam001/OneDrive - University of South Australia/AMCB R packages/DynamicCancerDriver/R/findDCD.r', echo=TRUE)
source('C:/Users/cifam001/OneDrive - University of South Australia/AMCB R packages/DynamicCancerDriver/R/findDCD.r', echo=TRUE)
#----- Find Dynamic Cancer Drivers, PPI top 40% -----
DCD.HER2time_SC <- findDCD(GeneExpression = GSE75688_TPM_tumor
, pathCovariate = "HER2"
, PPItop = 0.4
, findEvent = TRUE)
source('C:/Users/cifam001/OneDrive - University of South Australia/AMCB R packages/DynamicCancerDriver/R/findDCD.r', echo=TRUE)
source('C:/Users/cifam001/OneDrive - University of South Australia/AMCB R packages/DynamicCancerDriver/Test DynamicCancerDriver.R', echo=TRUE)
#### ----- Script to test DynamicCancerDriver package ------ ####
#
#  This script follows the procedure described in the
#  Bioinformatic-Oxford Paper.
#
#
rm(list = ls())
if (!requireNamespace("devtools", quietly = TRUE))
install.packages("devtools")
if (!requireNamespace("tidyverse", quietly = TRUE))
install.packages("tidyverse")
if (!requireNamespace("AMCBGeneUtils", quietly = TRUE))
devtools::install_github(repo = "AndresMCB/AMCBGeneUtils")
if (!requireNamespace("DynamicCancerDriver", quietly = TRUE))
devtools::install_github(repo = "AndresMCB/DynamicCancerDriver")
library(DynamicCancerDriver)
library(tidyverse)
source('C:/Users/cifam001/OneDrive - University of South Australia/AMCB R packages/DynamicCancerDriver/R/findDCD.r', echo=TRUE)
data("GSE75688_TPM_tumor")
#----- Find Dynamic Cancer Drivers, PPI top 40% -----
DCD.HER2time_SC <- findDCD(GeneExpression = GSE75688_TPM_tumor
, pathCovariate = "HER2"
, PPItop = 0.05
, findEvent = TRUE)
debugSource('C:/Users/cifam001/OneDrive - University of South Australia/AMCB R packages/DynamicCancerDriver/R/findDCD.r', echo=TRUE)
debugSource('C:/Users/cifam001/OneDrive - University of South Australia/AMCB R packages/DynamicCancerDriver/R/findDCD.r', echo=TRUE)
debugSource('C:/Users/cifam001/OneDrive - University of South Australia/AMCB R packages/DynamicCancerDriver/R/findDCD.r', echo=TRUE)
debugSource('C:/Users/cifam001/OneDrive - University of South Australia/AMCB R packages/DynamicCancerDriver/R/findDCD.r', echo=TRUE)
debugSource('C:/Users/cifam001/OneDrive - University of South Australia/AMCB R packages/DynamicCancerDriver/R/findDCD.r', echo=TRUE)
debugSource('C:/Users/cifam001/OneDrive - University of South Australia/AMCB R packages/DynamicCancerDriver/R/findDCD.r', echo=TRUE)
debugSource('C:/Users/cifam001/OneDrive - University of South Australia/AMCB R packages/DynamicCancerDriver/R/findDCD.r', echo=TRUE)
debugSource('C:/Users/cifam001/OneDrive - University of South Australia/AMCB R packages/DynamicCancerDriver/R/findDCD.r', echo=TRUE)
debugSource('C:/Users/cifam001/OneDrive - University of South Australia/AMCB R packages/DynamicCancerDriver/R/findDCD.r', echo=TRUE)
debugSource('C:/Users/cifam001/OneDrive - University of South Australia/AMCB R packages/DynamicCancerDriver/R/findDCD.r', echo=TRUE)
debugSource('C:/Users/cifam001/OneDrive - University of South Australia/AMCB R packages/DynamicCancerDriver/R/findDCD.r', echo=TRUE)
View(findDCD)
debugSource('C:/Users/cifam001/OneDrive - University of South Australia/AMCB R packages/DynamicCancerDriver/R/findDCD.r', echo=TRUE)
debugSource('C:/Users/cifam001/OneDrive - University of South Australia/AMCB R packages/DynamicCancerDriver/R/findDCD.r', echo=TRUE)
source('C:/Users/cifam001/OneDrive - University of South Australia/AMCB R packages/DynamicCancerDriver/R/findDCD.r', echo=TRUE)
debugSource('C:/Users/cifam001/OneDrive - University of South Australia/AMCB R packages/DynamicCancerDriver/R/findDCD.r', echo=TRUE)
source('C:/Users/cifam001/OneDrive - University of South Australia/AMCB R packages/DynamicCancerDriver/R/findDCD.r', echo=TRUE)
debugSource('C:/Users/cifam001/OneDrive - University of South Australia/AMCB R packages/DynamicCancerDriver/R/findDCD.r', echo=TRUE)
debugSource('C:/Users/cifam001/OneDrive - University of South Australia/AMCB R packages/DynamicCancerDriver/R/findDCD.r', echo=TRUE)
source('C:/Users/cifam001/OneDrive - University of South Australia/AMCB R packages/DynamicCancerDriver/R/findDCD.r', echo=TRUE)
debugSource('C:/Users/cifam001/OneDrive - University of South Australia/AMCB R packages/DynamicCancerDriver/R/findDCD.r', echo=TRUE)
debugSource('C:/Users/cifam001/OneDrive - University of South Australia/AMCB R packages/DynamicCancerDriver/Test DynamicCancerDriver.R', echo=TRUE)
debugSource('C:/Users/cifam001/OneDrive - University of South Australia/AMCB R packages/DynamicCancerDriver/Test DynamicCancerDriver.R', echo=TRUE)
debugSource('C:/Users/cifam001/OneDrive - University of South Australia/AMCB R packages/DynamicCancerDriver/R/findDCD.r', echo=TRUE)
source('C:/Users/cifam001/OneDrive - University of South Australia/AMCB R packages/DynamicCancerDriver/R/findDCD.r', echo=TRUE)
debugSource('C:/Users/cifam001/OneDrive - University of South Australia/AMCB R packages/DynamicCancerDriver/Test DynamicCancerDriver.R', echo=TRUE)
source('C:/Users/cifam001/OneDrive - University of South Australia/AMCB R packages/DynamicCancerDriver/R/findDCD.r', echo=TRUE)
source('C:/Users/cifam001/OneDrive - University of South Australia/AMCB R packages/DynamicCancerDriver/R/findDCD.r', echo=TRUE)
debugSource('C:/Users/cifam001/OneDrive - University of South Australia/AMCB R packages/DynamicCancerDriver/Test DynamicCancerDriver.R', echo=TRUE)
source('C:/Users/cifam001/OneDrive - University of South Australia/AMCB R packages/DynamicCancerDriver/R/findDCD.r', echo=TRUE)
#----- Find Dynamic Cancer Drivers, PPI top 40% -----
DCD.HER2time_SC <- findDCD(GeneExpression = GSE75688_TPM_tumor
, pathCovariate = "HER2"
, PPItop = 0.05
, findEvent = TRUE)
source('C:/Users/cifam001/OneDrive - University of South Australia/AMCB R packages/DynamicCancerDriver/R/findDCD.r', echo=TRUE)
#----- Find Dynamic Cancer Drivers, PPI top 40% -----
DCD.HER2time_SC <- findDCD(GeneExpression = GSE75688_TPM_tumor
, pathCovariate = "HER2"
, PPItop = 0.05
, findEvent = TRUE)
View(DCD.HER2time_SC)
View(DCD.HER2time_SC[["res"]][["CDinfer"]])
devtools::install_github(repo = "AndresMCB/DynamicCancerDriver")
data("GSE75688_TPM_tumor")
library(DynamicCancerDriver)
rm(list = ls())
library(DynamicCancerDriver)
data("GSE75688_TPM_tumor")
#----- Find Dynamic Cancer Drivers, PPI top 40% -----
DCD.HER2time_SC <- findDCD(GeneExpression = GSE75688_TPM_tumor
, pathCovariate = "HER2"
, PPItop = 0.4
, findEvent = TRUE)
View(DCD.HER2time_SC)
View(DCD.HER2time_SC[["res"]][["CDinfer"]])
source('C:/Users/cifam001/OneDrive - University of South Australia/AMCB R packages/DynamicCancerDriver/Test DynamicCancerDriver.R', echo=TRUE)
load("C:/Users/cifam001/OneDrive - University of South Australia/PhD UNISA/CancerDrivers/Causal Impact/R/Experiments/RelEffect(Abs)/Hoang_HER2_06True.rda")
View(DCD.HER2time_Bulk)
View(DCD.HER2time_Bulk[["res"]][["CDinfer"]])
View(Hoang_HER2_06True)
View(Hoang_HER2_06True[["res"]][["CDinfer"]])
sum(DCD.HER2time_Bulk$res$CDinfer$Ensembl.ID%in%Hoang_HER2_06True$res$CDinfer$Ensembl.ID)
load("C:/Users/cifam001/OneDrive - University of South Australia/PhD UNISA/CancerDrivers/Causal Impact/R/Experiments/RelEffect(Abs)/Hoang_VIM_06True.rda")
sum(DCD.VIMtime_Bulk$res$CDinfer$Ensembl.ID%in%Hoang_VIM_06True$res$CDinfer$Ensembl.ID)
View(DCD.VIMtime_Bulk)
DCD.VIMtime_Bulk[["res"]][["summary"]]
save(DCD.HER2time_SC$res$CDinfer, file = "supplementary table 1 (dynamic
cancer drivers from HER2time(SC)).csv")
View(DCD.HER2time_SC)
DCD.HER2time_SC$res$CDinfer
write.csv(DCD.HER2time_SC$res$CDinfer, file = "supplementary table 1 (dynamic
cancer drivers from HER2time(SC)).csv")
write.csv(DCD.HER2time_SC$res$CDinfer, file = "dynamic cancer drivers from HER2time(SC).csv")
getwd()
library(tidyverse)
library(xlsx)
install.packages("WriteXLS")
library(WriteXLS)
WriteXLS(DCD.HER2time_SC$res$CDinfer
, ExcelFileName = "supplementary table 1.xlsx"
, SheetNames = "dynamic cancer drivers from HER2time(SC)")
WriteXLS(DCD.HER2time_SC$res$CDinfer
, ExcelFileName = "supplementary table 1 - dynamic cancer drivers from HER2time(SC).xlsx")
write.csv(DCD.HER2time_SC$res$CDinfer
, file =  "supplementary table 1 - dynamic cancer drivers from HER2time(SC).csv")
source('C:/Users/cifam001/OneDrive - University of South Australia/AMCB R packages/DynamicCancerDriver/R/findDCD.r', echo=TRUE)
source('C:/Users/cifam001/OneDrive - University of South Australia/AMCB R packages/DynamicCancerDriver/Test DynamicCancerDriver.R', echo=TRUE)
View(DCD.HER2time_Bulk)
library(DynamicCancerDriver)
data("GSE75688_TPM_tumor")
#----- Find Dynamic Cancer Drivers, PPI top 40% -----
DCD.HER2time_SC <- findDCD(GeneExpression = GSE75688_TPM_tumor
, pathCovariate = "HER2"
, PPItop = 0.4
, findEvent = TRUE)
?data
data("GSE75688_TPM_tumor", package = "DynamicCancerDriver")
load("C:/Users/cifam001/OneDrive - University of South Australia/PhD UNISA/CancerDrivers/Causal Impact/R/Experiments/RelEffect(Abs)/Hoang_HER2_06True.rda")
rm(Hoang_HER2_06True)
#### ----- Script to test DynamicCancerDriver package ------ ####
#
#  This script follows the procedure described in the
#  Bioinformatic-Oxford Paper.
#
#
rm(list = ls())
if (!requireNamespace("devtools", quietly = TRUE))
install.packages("devtools")
if (!requireNamespace("tidyverse", quietly = TRUE))
install.packages("tidyverse")
if (!requireNamespace("AMCBGeneUtils", quietly = TRUE))
devtools::install_github(repo = "AndresMCB/AMCBGeneUtils")
if (!requireNamespace("DynamicCancerDriver", quietly = TRUE))
devtools::install_github(repo = "AndresMCB/DynamicCancerDriver")
library(DynamicCancerDriver)
library(tidyverse)
#### ----- Load Single Cell Data ------ ####
# pre-processed Single Cell data, GSE75688
# Genes not expressed in a least 20% of the dataset were removed.
# afterwards, only samples from tumor were kept
data("GSE75688_TPM_tumor", package = "DynamicCancerDriver")
#----- Find Dynamic Cancer Drivers, PPI top 40% -----
DCD.HER2time_SC <- findDCD(GeneExpression = GSE75688_TPM_tumor
, pathCovariate = "HER2"
, PPItop = 0.4
, findEvent = TRUE)
write.csv(DCD.HER2time_SC$res$CDinfer
, file =  "supplementary table 1 - dynamic cancer drivers from HER2time(SC).csv")
DCD.VIMtime_SC <- findDCD(GeneExpression = GSE75688_TPM_tumor
, pathCovariate = "VIM"
, PPItop = 0.4
, findEvent = TRUE)
####---- Load TCGA-BRCA Data -----####
# Dataset downloaded and normalised using TCGAbiolinks (March 2021).
# Only samples from primary tumor were downloaded
# Included in DynamicCancerDriver package as TCGA_BRCA_TP_NormCounts.rda
data("TCGA_BRCA_TP_NormCounts", package = "DynamicCancerDriver")
# remove genes with no Hugo Symbol
genes <- AMCBGeneUtils::changeGeneId(colnames(TCGA_BRCA_TP_NormCounts)
, from = "Ensembl.ID")
TCGA_BRCA <- TCGA_BRCA_TP_NormCounts[,!is.na(genes$HGNC.symbol),drop=F]
# remove genes not expressed in at least 20% of the samples
TCGA_BRCA <-TCGA_BRCA[,colSums(TCGA_BRCA>0)>(0.2*nrow(TCGA_BRCA))
, drop=F]
# For comparison purposes, we keep only samples from the same patients
# analysed in CBNA paper
data("CBNApaper.patients", package = "DynamicCancerDriver")
patients <- str_sub(row.names(TCGA_BRCA), start = 1, end = 12)
index <- patients%in%CBNApaper.patients
TCGA_BRCA <- TCGA_BRCA[index,, drop=FALSE]
#----- Find Dynamic Cancer Drivers (BULK data), PPI top 40% -----
DCD.HER2time_Bulk <- findDCD(GeneExpression = TCGA_BRCA
, pathCovariate = "HER2"
, PPItop = 0.4
, findEvent = TRUE
, project = "BRCA")
DCD.VIMtime_Bulk <- findDCD(GeneExpression = TCGA_BRCA
, pathCovariate = "VIM"
, PPItop = 0.4
, findEvent = TRUE
, project = "BRCA")
write.csv(DCD.HER2time_SC$res$CDinfer
, file =  "supplementary table 1 - dynamic cancer drivers from VIMtime(SC).csv")
View(DCD.VIMtime_Bulk)
View(DCD.HER2time_SC)
View(DCD.HER2time_SC[["res"]][["CDinfer"]])
# "Combined" as the intersection of inferred DCD
# keep the highest relative Causal Impact
Combined <-
rbind(DCD.HER2time_SC$res$CDinfer,DCD.VIMtime_SC$res$CDinfer)%>%
arrange(RelEffect)
View(Combined)
# "Combined" as the intersection of inferred DCD
# keep the highest relative Causal Impact
Combined <-
rbind(DCD.HER2time_SC$res$CDinfer,DCD.VIMtime_SC$res$CDinfer)%>%
arrange(desc(abs(RelEffect)))
library(DynamicCancerDriver)
library(tidyverse)
# "Combined" as the intersection of inferred DCD
# keep the highest relative Causal Impact
Combined <-
rbind(DCD.HER2time_SC$res$CDinfer,DCD.VIMtime_SC$res$CDinfer)%>%
arrange(desc(abs(RelEffect)))
View(Combined)
# "Combined" as the intersection of inferred DCD
# keep the highest relative Causal Impact
intersection <- intersect(DCD.HER2time_SC$res$CDinfer
,DCD.VIMtime_SC$res$CDinfer)
# "Combined" as the intersection of inferred DCD
# keep the highest relative Causal Impact
intersection <- intersect(DCD.HER2time_SC$res$CDinfer$Ensembl.ID
,DCD.VIMtime_SC$res$CDinfer$Ensembl.ID)
Combined <-
rbind(DCD.HER2time_SC$res$CDinfer,DCD.VIMtime_SC$res$CDinfer)%>%
filter(Ensembl.ID %in% intersection) %>%
arrange(desc(abs(RelEffect)))
View(Combined)
# "Combined" as the union of inferred DCD
# keep the highest relative Causal Impact
unionSet <- union(DCD.HER2time_SC$res$CDinfer$Ensembl.ID
,DCD.VIMtime_SC$res$CDinfer$Ensembl.ID)
Combined <-
rbind(DCD.HER2time_SC$res$CDinfer,DCD.VIMtime_SC$res$CDinfer)%>%
filter(Ensembl.ID %in% unionSet) %>%
arrange(desc(abs(RelEffect)))
View(Combined)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
Sys.setlocale("LC_COLLATE", "C")
#Load data
tweet = load('~/rdmTweets-201306.RData')
tweet = get(tweet)
# "Combined" as the union of inferred DCD
# keeping the highest relative Causal Impact
unionSet <- union(DCD.HER2time_SC$res$CDinfer$Ensembl.ID
,DCD.VIMtime_SC$res$CDinfer$Ensembl.ID)
Combined <-
rbind(DCD.HER2time_SC$res$CDinfer,DCD.VIMtime_SC$res$CDinfer)%>%
filter(Ensembl.ID %in% unionSet) %>%
arrange(desc(abs(RelEffect)))%>%
disctint(Ensembl.ID)
Combined <-
rbind(DCD.HER2time_SC$res$CDinfer,DCD.VIMtime_SC$res$CDinfer)%>%
filter(Ensembl.ID %in% unionSet) %>%
arrange(desc(abs(RelEffect)))%>%
distinct(Ensembl.ID)
View(Combined)
Combined <-
rbind(DCD.HER2time_SC$res$CDinfer,DCD.VIMtime_SC$res$CDinfer)%>%
filter(Ensembl.ID %in% unionSet) %>%
arrange(desc(abs(RelEffect)))%>%
distinct(Ensembl.ID, .keep_all = T)
View(Combined)
write.csv(DCD.VIMtime_SC$res$CDinfer
, file =  "supplementary table 2 - dynamic cancer drivers from VIMtime(SC).csv")
write.csv(DCD.HER2time_SC$res$CDinfer
, file =  "supplementary table 1 - dynamic cancer drivers HER2time(SC).csv")
write.csv(DCD.VIMtime_SC$res$CDinfer
, file =  "supplementary table 2 - dynamic cancer drivers VIMtime(SC).csv")
write.csv(DCD.VIMtime_Bulk$res$CDinfer
, file =  "supplementary table 8 - dynamic cancer drivers HER2time(Bulk).csv")
write.csv(DCD.VIMtime_Bulk$res$CDinfer
, file =  "supplementary table 9 - dynamic cancer drivers VIMtime(Bulk).csv")
GO_Biological_Process_2021_HER2 <- read.csv("C:/Users/cifam001/OneDrive - University of South Australia/PhD UNISA/CancerDrivers/Causal Impact/Enrichr/GO_Biological_Process_2021_HER2.txt")
View(GO_Biological_Process_2021_HER2)
GO_Biological_Process_2021_HER2 <- read.csv("C:/Users/cifam001/OneDrive - University of South Australia/PhD UNISA/CancerDrivers/Causal Impact/Enrichr/GO_Biological_Process_2021_HER2.txt")
View(GO_Biological_Process_2021_HER2)
read.delim("C:/Users/cifam001/OneDrive - University of South Australia/PhD UNISA/CancerDrivers/Causal Impact/Enrichr/GO_Biological_Process_2021_HER2.txt", sep = ",")
read.delim("C:/Users/cifam001/OneDrive - University of South Australia/PhD UNISA/CancerDrivers/Causal Impact/Enrichr/GO_Biological_Process_2021_HER2.txt", sep = " ")
GO_Biological_Process_2021_HER2 <- read.delim("C:/Users/cifam001/OneDrive - University of South Australia/PhD UNISA/CancerDrivers/Causal Impact/Enrichr/GO_Biological_Process_2021_HER2.txt")
View(GO_Biological_Process_2021_HER2)
write.csv2(GO_Biological_Process_2021_HER2, file = "supplementary table 4 - GO terms HER2time(SC).csv")
write.csv(GO_Biological_Process_2021_HER2, file = "supplementary table 4 - GO terms HER2time(SC).csv")
devtools::build_manual()
devtools::build_manual(pkg = "DynamicCancerDriver")
library(DynamicCancerDriver)
library(DynamicCancerDriver)
library(DynamicCancerDriver)
library(DynamicCancerDriver)
devtools::build_manual(pkg = "DynamicCancerDriver")
devtools::build_manual()
devtools::build_manual(path = "C:/Users/cifam001/Documents")
devtools::build_manual(pkg = ,path = "C:/Users/cifam001/Documents")
library(DynamicCancerDriver)
devtools::build_manual(pkg = DynamicCancerDriver,path = "C:/Users/cifam001/Documents")
devtools::build_manual(pkg = "DynamicCancerDriver",path = "C:/Users/cifam001/Documents")
devtools::build_manual(pkg = "C:/Users/cifam001/Documents/R/R-4.1.0/library/DynamicCancerDriver",path = "C:/Users/cifam001/Documents")
devtools::build_manual()
devtools::build_manual(pkg = "DynamicCancerDriver")
library(DynamicCancerDriver)
library(DynamicCancerDriver)
library(DynamicCancerDriver)
devtools::build_manual(pkg = "DynamicCancerDriver")
devtools::build_manual(pkg = "DynamicCancerDriver", path = "c:/")
devtools::build_manual(pkg = "DynamicCancerDriver", path = "C:/Users/cifam001/Documents")
devtools::build_manual(pkg = "DynamicCancerDriver", path = "C:/Users/cifam001/Documents/")
library(DynamicCancerDriver)
devtools::build_manual(pkg = "DynamicCancerDriver")
devtools::build_manual(pkg = DynamicCancerDriver)
devtools::build_manual(pkg = "C:\Users\cifam001\Documents\R\R-4.1.0\library\DynamicCancerDriver")
devtools::build_manual(pkg = "C:/Users/cifam001/Documents/R/R-4.1.0/library/DynamicCancerDriver")
library(DynamicCancerDriver)
devtools::build_manual(pkg = "C:/Users/cifam001/Documents/R/R-4.1.0/library/DynamicCancerDriver")
library(DynamicCancerDriver)
devtools::build_manual(pkg = "C:/Users/cifam001/Documents/R/R-4.1.0/library/DynamicCancerDriver")
library(DynamicCancerDriver)
devtools::build_manual(pkg = "C:/Users/cifam001/Documents/R/R-4.1.0/library/DynamicCancerDriver")
library(DynamicCancerDriver)
devtools::build_manual(pkg = "C:/Users/cifam001/Documents/R/R-4.1.0/library/DynamicCancerDriver")
library(DynamicCancerDriver)
r.version
version(R)
R
version
